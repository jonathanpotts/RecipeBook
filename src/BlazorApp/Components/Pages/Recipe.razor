@page "/Recipes/{Id:long}"
@using System.ComponentModel.DataAnnotations
@inject IRecipeService RecipeService

@if (_recipe == null)
{
    <PageTitle>Recipe</PageTitle>

    <h1>Recipe</h1>

    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <PageTitle>@_recipe.Name</PageTitle>

    <div class="d-flex flex-wrap justify-content-between column-gap-3">
        <h1>@_recipe.Name</h1>
        <div>
            <AuthorizeView Policy="@Policies.Update" Resource="_recipe">
                <div class="mb-2">
                    <a class="btn btn-secondary" href="Recipes/@(Id)/Edit/CoverImage">
                        <i class="bi bi-image" aria-hidden="true"></i> Edit Cover Image
                    </a>
                    <a class="btn btn-primary" href="Recipes/@(Id)/Edit">
                        <i class="bi bi-pencil" aria-hidden="true"></i> Edit
                    </a>
                </div>
            </AuthorizeView>
        </div>
    </div>

    <p><span class="badge text-bg-secondary">@_recipe.Cuisine!.Name</span></p>

    @if (_recipe.CoverImage != null)
    {
        <img
            src="@_recipe.CoverImage.Url"
            alt="@_recipe.CoverImage.AltText"
            class="w-100 rounded mb-4 object-fit-cover"
            height="300" />
    }

    <p class="mb-5">@_recipe.Description</p>

    <div class="row">
        <div class="col-xl-4 col-xxl-3 mb-5">
            <div class="card">
                <div class="card-header">
                    Ingredients
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var ingredient in _recipe.Ingredients ?? Enumerable.Empty<string>())
                    {
                        <li class="list-group-item">@ingredient</li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-xl-8 col-xxl-9 mb-5">
            <section id="instructions">
                @((MarkupString)_recipe.Instructions!.Html!)
            </section>
        </div>
    </div>
}

@code {
    [Parameter]
    public long Id { get; set; }

    private RecipeWithCuisineDto? _recipe = null;

    protected override async Task OnInitializedAsync()
    {
        _recipe = await RecipeService.GetAsync(Id);
    }
}
